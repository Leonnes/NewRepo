import UIKit

/*
 В качестве курсового проекта вы разработаете функцию для расчета времени пути на общественном транспорте.

 В вашем городе появилась новая трамвайная ветка. Правительство города решило, что нужно добавить в мобильное приложение функционал по подсчету времени, затраченному на поездку, чтобы жители могли заранее планировать время. Ваша задача написать функцию, в которую будете передавать названия начальной и конечной остановки, и функция будет расчитывать время, затраченное на поездку.

 Алгоритм решения

1. Создайте коллекцию. Вид коллекции вы должны определить сами.
2. Наполните коллекцию данными. Названия остановок общественного транспорта (минимум 7) и время проезда между остановками (время задайте самостоятельно). Для упрощения можно указывать время проезда от первой остановки. То есть первая остановка - 0 минут, вторая остановка - 7 минут (0 + 7), третья остановка - 11 минут (7 + 4) и т.д.
3. Создайте функцию, которая будет принимать начальную и конечную остановку (тип string) и время, затраченное на поездку (тип Int).
4. Нужно учитывать, что остановки в функцию можно передавать в любом порядке. Например, начальная остановка - остановка 3, конечная остановка - остановка 8. Или начальная остановка - остановка 2, конечная остановка - остановка 6.
Подсказка:
можно комбинировать несколько коллекций, но коллекция должна быть одна. То есть нельзя использовать, например, два массива.

Алгоритм должен сам определять, в каком направлении двигается пассажир. Так как не все коллекции имеют упорядоченные значения, нужно пронумеровать порядок остановок на пути для облегчения решения задачи.

*/

//1.serova 0min
//2.chkalovskaya 5min
//3.bolshacova 10min
//4.dekabristov 15min
//5.circus 25min
//6.ploshad1905 35min
//7.urfu 50min

var stationsNum: [String: Int] = ["serova": 0, "chkalovskaya": 5, "bolshacova": 10, "dekabristov": 15, "circus": 25, "ploshad1905": 35, "urfu": 50]


func busstation (startStation: String, finishStation: String) -> () {
    if let f = stationsNum[finishStation], let s = stationsNum[startStation]{
        let time: Int = f - s
        print ("Вам ехать \(abs(time)) минут")
    }
    else {
        print("Такой остановки не существует на нашем маршруте")
    }
}

busstation(startStation: "а3п", finishStation: "serova")
busstation(startStation: "urfu", finishStation: "serova")
busstation(startStation: "serova", finishStation: "bolshacova")


